SELECT  id,stock_id,symbol,close,Prev_close,fivedaysago,fivedays_Rtn from(SELECT stocks.ID,stocks.symbol,close ,date,stock_id,lag(close) over (PARTITION BY stock_id ORDER BY date) AS Prev_close,lag(close,4) over (PARTITION BY stock_id ORDER BY date) as fivedaysago,round((close-lag(close,4) over (PARTITION BY stock_id ORDER BY date) )/ lag(close,4) over (PARTITION BY stock_id ORDER BY date)*100,2) as fivedays_Rtn,CASE  when lag(close) over (PARTITION BY stock_id ORDER BY date) > close AND lag(close,2) over (PARTITION BY stock_id ORDER BY date) > lag(close) over (PARTITION BY stock_id ORDER BY date) AND lag(close,3) over (PARTITION BY stock_id ORDER BY date) > lag(close,2) over (PARTITION BY stock_id ORDER BY date) AND  lag(close,4) over (PARTITION BY stock_id ORDER BY date) > lag(close,3) over (PARTITION BY stock_id ORDER BY date) THEN 'yes' ELSE NULL END gap from stocks JOIN stock_price ON stocks.ID = stock_price.stock_id WHERE date BETWEEN (select date(max(date)+ INTERVAL'-10 day') FROM stock_price)AND (select max(date) FROM stock_price)) as foo WHERE gap='yes' AND date=(select max(date) FROM stock_price) ORDER BY 5 